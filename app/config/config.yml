imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: pl
    app.path.post_image: /uploads/images/posts

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    number_format:
        thousands_separator: ','
    form_themes:
        - bootstrap_3_layout.html.twig

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: pgsql
        connections:
                   #Mysql
                   default:
                        driver:   pdo_mysql
                        host:     "%database_host%"
                        port:     "%database_port%"
                        dbname:   "%database_name%"
                        user:     "%database_user%"
                        password: "%database_password%"
                        charset:  UTF8
                   #Postgresql
                   pgsql:
                        driver:   pdo_pgsql
                        host:     "%database_host%"
                        port:     "%database_port%"
                        dbname:   "%database_name%"
                        user:     "%database_user%"
                        password: "%database_password%"
                        charset:  UTF8

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    encryption: ssl
    port: 465
    password: '%mailer_password%'
    spool: { type: memory }


fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

vich_uploader:
    db_driver: orm
    mappings:
            post_image:
                uri_prefix: '%app.path.post_image%'
                upload_destination: '%kernel.root_dir%/../web/uploads/images/posts'

easy_admin:
    site_name: Karate Kyokushin Rzeszów
    design:
      brand_color: '#de1b1b'
    entities:
      Post:
        class: AppBundle\Entity\Post
        label: Aktualności

        list:
          fields:
              - id
              - author
              - categories
              - title
              - content
              - { property: 'image', type: 'image', base_path: '%app.path.post_image%' }
              - { property: 'createdAt', format: 'j / M / Y' }

        form:
          fields:
              - { property: 'title', css_class: 'large' }
              - { property: 'content'}
              - { property: 'author'}
              - { type: 'divider' }
              - { property: 'categories', type: 'easyadmin_autocomplete' }
              - { property: 'createdAt' }
              - { property: 'imageFile', type: 'vich_image', type_options: { required: true } }
      Category:
        class: AppBundle\Entity\Category
        label: Kategorie
      User:
        class: AppBundle\Entity\User
        form:
        new:
          fields:
            - username
            - email
            # if administrators are allowed to edit users' passwords and roles, add this:
            - { property: 'plainPassword', type: 'password', label: 'Nowe hasło', type_options: { required: true } }
            - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
